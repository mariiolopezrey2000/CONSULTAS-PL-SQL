1.	Elimina a los empleados del departamento que menos empleados tiene.

DELETE EMPLE 
WHERE DEPT_NO IN(
SELECT DEPT_NO FROM EMPLE GROUP BY DEPT_NO HAVING COUNT(*)=
(SELECT MIN(COUNT(*)) FROM EMPLE GROUP BY DEPT_NO ));

2.	Inserta un empleado en el departamento que tiene menos empleados.

INSERT INTO EMPLE (EMP_NO,APELLIDO,DEPT_NO)
SELECT DISTINCT 131,'PACO',D.DEPT_NO 
FROM EMPLE E,DEPART D 
WHERE D.DEPT_NO=E.DEPT_NO(+)
GROUP BY D.DEPT_NO HAVING COUNT(APELLIDO)=
(SELECT MIN(COUNT(APELLIDO))
FROM EMPLE E,DEPART D 
WHERE D.DEPT_NO=E.DEPT_NO(+) GROUP BY D.DEPT_NO );

3.	Inserta un artículo de primera categoría en el fabricante español. 
Después crea pedidos de ese artículo en las tiendas de Guadalajara.

INSERT INTO ARTICULOS(ARTICULO,COD_FABRICANTE,PESO,CATEGORIA)
SELECT 'PATATA',COD_FABRICANTE,1,'Primera'
FROM FABRICANTES 
WHERE COD_FABRICANTE  IN (SELECT COD_FABRICANTE FROM FABRICANTES WHERE PAIS LIKE 'ESP%');

INSERT INTO PEDIDOS P
SELECT  NIF,'PATATA', COD_FABRICANTE ,1,'Primera',SYSDATE,2 
FROM TIENDAS T,FABRICANTES 
WHERE NIF IN(SELECT NIF FROM TIENDAS WHERE PROVINCIA ='GUADALAJARA') AND
COD_FABRICANTE IN (SELECT COD_FABRICANTE FROM FABRICANTES WHERE PAIS LIKE 'ESP%');

4.	Actualiza a los empleados del departamento que más vendedores tiene, y subes su salario un 5%.

UPDATE EMPLE 
SET SALARIO=(SALARIO+(SALARIO*0.05))
WHERE DEPT_NO =(SELECT DEPT_NO FROM EMPLE  WHERE OFICIO='VENDEDOR' GROUP BY DEPT_NO,OFICIO HAVING COUNT(*)=
(SELECT MAX(COUNT(*)) FROM EMPLE GROUP BY DEPT_NO,OFICIO))

5.Actualiza las existencias de los artículos 
restando a cada uno las unidades pedidas de SU último pedido.
(subconsulta correlacionada)
UPDATE ARTICULOS ART
SET EXISTENCIAS =
EXISTENCIAS-(SELECT SUM(UNIDADES_PEDIDAS)
                FROM PEDIDOS 
                    WHERE ARTICULO=ART.ARTICULO AND
                    COD_FABRICANTE=ART.COD_FABRICANTE AND
                    PESO=ART.PESO AND
                    CATEGORIA=ART.CATEGORIA AND
                    FECHA_PEDIDO=
                        (SELECT MAX(FECHA_PEDIDO) FROM PEDIDOS 
                            WHERE ARTICULO=ART.ARTICULO AND
                                COD_FABRICANTE=ART.COD_FABRICANTE AND
                                PESO=ART.PESO AND
                                CATEGORIA=ART.CATEGORIA));

6.	Elimina las ventas del artículo que menos factura.

DELETE FROM VENTAS 
WHERE (ARTICULO,COD_FABRICANTE,PESO,CATEGORIA) IN 
(SELECT A.ARTICULO,A.COD_FABRICANTE,A.PESO,A.CATEGORIA 
FROM ARTICULOS A,VENTAS V 
WHERE A.ARTICULO=V.ARTICULO AND
A.COD_FABRICANTE=V.COD_FABRICANTE 
AND A.PESO=V.PESO 
AND  A.CATEGORIA=V.CATEGORIA 
GROUP BY A.ARTICULO,A.COD_FABRICANTE,A.PESO,A.CATEGORIA 
HAVING SUM(UNIDADES_VENDIDAS*PRECIO_VENTA)=
(SELECT MIN(SUM(UNIDADES_VENDIDAS*PRECIO_VENTA)) 
FROM ARTICULOS A,VENTAS V 
WHERE A.ARTICULO=V.ARTICULO AND
A.COD_FABRICANTE=V.COD_FABRICANTE 
AND A.PESO=V.PESO 
AND  A.CATEGORIA=V.CATEGORIA 
GROUP BY A.ARTICULO,A.COD_FABRICANTE,A.PESO,A.CATEGORIA)
); 





7.	Elimina las cuentas que no tienen movimientos.

DELETE FROM CUENTAS WHERE(COD_BANCO,COD_SUCUR,NUM_CTA)IN
(SELECT  COD_BANCO,COD_SUCUR,NUM_CTA FROM CUENTAS 
WHERE (COD_BANCO,COD_SUCUR,NUM_CTA) 
NOT IN 
(SELECT COD_BANCO,COD_SUCUR,NUM_CTA FROM movimientos))





8.	Inserta un movimiento en la cuenta que tenga más movimientos.

INSERT INTO MOVIMIENTOS 
SELECT COD_BANCO,COD_SUCUR,NUM_CTA,SYSDATE,'I',1
FROM MOVIMIENTOS 
GROUP BY COD_BANCO,COD_SUCUR,NUM_CTA
HAVING COUNT(*)=(SELECT MAX(COUNT(*)) 
FROM MOVIMIENTOS GROUP BY COD_BANCO,COD_SUCUR,NUM_CTA);


9.	Asigna los profesores de matemáticas al centro 
que tenga menos profesores de esta especialidad.

UPDATE profesores
SET COD_CENTRO=(SELECT COD_CENTRO
FROM PROFESORES 
WHERE ESPECIALIDAD LIKE 'MATE%' 
GROUP BY COD_CENTRO,ESPECIALIDAD HAVING COUNT(*)=
(SELECT MIN(COUNT(*)) 
FROM PROFESORES 
WHERE ESPECIALIDAD LIKE 'MATE%' 
GROUP BY COD_CENTRO,ESPECIALIDAD))
WHERE ESPECIALIDAD LIKE 'MATE%';
